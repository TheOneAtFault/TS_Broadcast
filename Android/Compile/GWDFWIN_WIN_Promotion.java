/**
 * Code generated by WINDEV Mobile - DO NOT MODIFY!
 * WINDEV Mobile object: Fenêtre
 * Android class: WIN_WIN_Promotion
 * Date: 28/11/2019 14:08:47
 * Version of wdjava64.dll: 24.0.254.7
 */


package com.mycompany.ts_broadcast.wdgen;


import com.mycompany.ts_broadcast.*;
import fr.pcsoft.wdjava.core.types.*;
import fr.pcsoft.wdjava.core.*;
import fr.pcsoft.wdjava.ui.champs.fenetre.*;
import fr.pcsoft.wdjava.core.poo.*;
import fr.pcsoft.wdjava.core.types.collection.tableau.*;
import fr.pcsoft.wdjava.core.application.*;
import fr.pcsoft.wdjava.ui.champs.libelle.*;
import fr.pcsoft.wdjava.ui.cadre.*;
import fr.pcsoft.wdjava.ui.actionbar.*;
import fr.pcsoft.wdjava.core.types.collection.*;
import fr.pcsoft.wdjava.api.*;
import fr.pcsoft.wdjava.ui.activite.*;
/*Imports trouvés dans le code WL*/
/*Fin Imports trouvés dans le code WL*/



class GWDCCheckPromotion extends WDStructure
{
public WDObjet mWD_arrBarcodes = new WDTableauSimple(1, new int[]{0}, 0, 16);public WDObjet mWD_arrGuids = new WDTableauSimple(1, new int[]{0}, 0, 16);public WDObjet mWD_arrQuantities = new WDTableauSimple(1, new int[]{0}, 0, 8);public WDObjet mWD_sGuid = new WDChaineU();



public GWDCCheckPromotion()
{
}

public WDProjet getProjet()
{
return GWDPTS_Broadcast.getInstance();
}

public IWDEnsembleElement getEnsemble()
{
return GWDPTS_Broadcast.getInstance();
}
public int getModeContexteHF()
{
return 1;
}
protected WDObjet getMembreByName(String sNomMembre)
{
if(sNomMembre.equals("arrbarcodes")) return mWD_arrBarcodes;
if(sNomMembre.equals("arrguids")) return mWD_arrGuids;
if(sNomMembre.equals("arrquantities")) return mWD_arrQuantities;
if(sNomMembre.equals("sguid")) return mWD_sGuid;

return super.getMembreByName(sNomMembre);
}
protected boolean getMembreByIndex(int nIndice, WDClasse.Membre membre)
{
switch(nIndice)
{
case 0 : membre.m_refMembre = mWD_arrBarcodes; membre.m_strNomMembre = "mWD_arrBarcodes"; membre.m_bStatique = false; membre.m_strNomMembreWL = "arrBarcodes"; membre.m_bSerialisable = true; membre.m_strNomSerialisation = null; membre.m_strMapping = null; return true;
case 1 : membre.m_refMembre = mWD_arrGuids; membre.m_strNomMembre = "mWD_arrGuids"; membre.m_bStatique = false; membre.m_strNomMembreWL = "arrGuids"; membre.m_bSerialisable = true; membre.m_strNomSerialisation = null; membre.m_strMapping = null; return true;
case 2 : membre.m_refMembre = mWD_arrQuantities; membre.m_strNomMembre = "mWD_arrQuantities"; membre.m_bStatique = false; membre.m_strNomMembreWL = "arrQuantities"; membre.m_bSerialisable = true; membre.m_strNomSerialisation = null; membre.m_strMapping = null; return true;
case 3 : membre.m_refMembre = mWD_sGuid; membre.m_strNomMembre = "mWD_sGuid"; membre.m_bStatique = false; membre.m_strNomMembreWL = "sGuid"; membre.m_bSerialisable = true; membre.m_strNomSerialisation = null; membre.m_strMapping = null; return true;

default: return super.getMembreByIndex(nIndice - 4, membre);
}
}
protected WDPropriete getProprieteByName(String sNomPropriete)
{
return super.getProprieteByName(sNomPropriete);
}
protected WDPropriete getProprieteByIndex(int nIndice)
{
switch(nIndice)
{
default: return super.getProprieteByIndex(nIndice - 0);
}
}
}
public class GWDFWIN_WIN_Promotion extends WDFenetre
{

////////////////////////////////////////////////////////////////////////////
// Déclaration des champs de WIN_WIN_Promotion
////////////////////////////////////////////////////////////////////////////

/**
 * STC_Info
 */
class GWDSTC_Info extends WDLibelle
{

////////////////////////////////////////////////////////////////////////////
// Déclaration des champs du fils n°1 de WIN_WIN_Promotion.STC_Info
////////////////////////////////////////////////////////////////////////////
public  void initialiserObjet()
{
super.initialiserObjet();
super.setFenetre( getWDFenetreThis() );
super.setQuid(3305129835758736038l);

super.setChecksum("852493841");

super.setNom("STC_Info");

super.setType(3);

super.setBulle("");

super.setTypeSaisie(0);

super.setMasqueSaisie(new WDChaineU("0"));

super.setLibelle("Check Promotions:\r\n\r\nCall \"checkPromotionsResult\" pass -->\r\n\r\n* context - of the activity\r\n* shopperGuid - Tapped shopper or just blank if no shopper was tapped\r\n* barcodes - List of string\r\n* guids - list of string\r\n* quantities - list of integer");

super.setNote("", "");

super.setCurseurSouris(0);

super.setEtatInitial(0);

super.setPositionInitiale(8, 8);

super.setTailleInitiale(304, 391);

super.setPlan(0);

super.setCadrageHorizontal(0);

super.setCadrageVertical(0);

super.setTailleMin(0, 0);

super.setTailleMax(2147483647, 2147483647);

super.setVisibleInitial(true);

super.setAltitude(1);

super.setAncrageInitial(8, 1000, 1000, 1000, 1000, 0);

super.setEllipse(0);

super.setTauxParallaxe(0, 0);

super.setPresenceLibelle(true);

super.setStyleLibelle(0x222222, 0xFFFFFFFF, creerPolice_GEN("Roboto", -8.000000, 0), 3, 0, 0x222222);

super.setCadreExterieur(WDCadreFactory.creerCadre_GEN(1, 0xE1E1E1, 0x616161, 0xFFFFFFFF, 2.000000, 2.000000, 0, 1), 0, 0, 0, 0);


activerEcoute();
super.terminerInitialisation();
}

// Activation des écouteurs: 
public void activerEcoute()
{
}

////////////////////////////////////////////////////////////////////////////
// Déclaration des variables globales
////////////////////////////////////////////////////////////////////////////
}
public GWDSTC_Info mWD_STC_Info;

/**
 * ACTB_ActionBar
 */
class GWDACTB_ActionBar extends WDActionBar
{

////////////////////////////////////////////////////////////////////////////
// Déclaration des champs du fils n°1 de WIN_WIN_Promotion.ACTB_ActionBar
////////////////////////////////////////////////////////////////////////////
public  void initialiserObjet()
{
super.initialiserObjet();
super.setFenetre( getWDFenetreThis() );
super.setNom("ACTB_ActionBar");

super.setNote("", "");

super.setParamBoutonGauche(true, 1, "", "");

super.setParamBoutonDroit(false, 0, "", "");

super.setStyleActionBar(0xFFFFFF, 0x383226, true);

super.setImageFond("");

super.terminerInitialisation();
}

////////////////////////////////////////////////////////////////////////////
// Déclaration des variables globales
////////////////////////////////////////////////////////////////////////////
}
public GWDACTB_ActionBar mWD_ACTB_ActionBar;

/**
 * Traitement: Global declarations of WIN_WIN_Promotion
 */
public void declarerGlobale(WDObjet[] WD_tabParam)
{
super.declarerGlobale(WD_tabParam, 0, 0);
int WD_ntabParamLen = 0;
if(WD_tabParam!=null) WD_ntabParamLen = WD_tabParam.length;


// CheckPromotion is Structure

}




/**
 * Traitement: End of initialization of WIN_WIN_Promotion
 */
public void init()
{
super.init();


////////////////////////////////////////////////////////////////////////////
// Déclaration des variables locales au traitement
// (En WLangage les variables sont encore visibles après la fin du bloc dans lequel elles sont déclarées)
////////////////////////////////////////////////////////////////////////////
WDObjet vWD_bIsValid = new WDBooleen();



// bIsValid is boolean = FindBroadCastReceiver()

vWD_bIsValid.setValeur(GWDCPCOL_GlobalProcedures.FindBroadCastReceiver());


// IF bIsValid THEN
if(vWD_bIsValid.getBoolean())
{
// 	enquiry is CheckPromotion
WDObjet vWD_enquiry = WDVarNonAllouee.ref;
vWD_enquiry = new GWDCCheckPromotion();


// 	enquiry.arrBarcodes = ["123","3456","789"]	
vWD_enquiry.checkType(GWDCCheckPromotion.class).mWD_arrBarcodes.setValeur(new WDSerie(new WDObjet[]{new WDChaineU("123"), new WDChaineU("3456"), new WDChaineU("789")}));

// 	enquiry.arrGuids = ["123","3456","789"]
vWD_enquiry.checkType(GWDCCheckPromotion.class).mWD_arrGuids.setValeur(new WDSerie(new WDObjet[]{new WDChaineU("123"), new WDChaineU("3456"), new WDChaineU("789")}));

// 	enquiry.arrQuantities = [123,3456,789]
vWD_enquiry.checkType(GWDCCheckPromotion.class).mWD_arrQuantities.setValeur(new WDSerie(new WDObjet[]{new WDEntier4(123), new WDEntier4(3456), new WDEntier4(789)}));

// 	enquiry.sGuid = "12345678-1234-1234-1234-123456789123"
vWD_enquiry.checkType(GWDCCheckPromotion.class).mWD_sGuid.setValeur("12345678-1234-1234-1234-123456789123");

// 	CheckPromotions(VariantToJSON(enquiry))
GWDCPCOL_GlobalProcedures.CheckPromotions(WDAPIVariant.variantVersJSON(vWD_enquiry).getString());

}

}




// Activation des écouteurs: 
public void activerEcoute()
{
}

////////////////////////////////////////////////////////////////////////////
// Déclaration des variables globales
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
// Création des champs de la fenêtre WIN_WIN_Promotion
////////////////////////////////////////////////////////////////////////////
protected void creerChamps()
{
mWD_STC_Info = new GWDSTC_Info();
mWD_ACTB_ActionBar = new GWDACTB_ActionBar();

}
////////////////////////////////////////////////////////////////////////////
// Initialisation de la fenêtre WIN_WIN_Promotion
////////////////////////////////////////////////////////////////////////////
public  void initialiserObjet()
{
super.setQuid(3305129771333819069l);

super.setChecksum("856474938");

super.setNom("WIN_WIN_Promotion");

super.setType(1);

super.setBulle("");

super.setMenuContextuelSysteme();

super.setCurseurSouris(0);

super.setNote("", "");

super.setCouleur(0x0);

super.setCouleurFond(0xFFFFFF);

super.setPositionInitiale(0, 0);

super.setTailleInitiale(320, 407);

super.setTitre("WIN_Promotion");

super.setTailleMin(-1, -1);

super.setTailleMax(20000, 20000);

super.setVisibleInitial(true);

super.setPositionFenetre(1);

super.setPersistant(true);

super.setGFI(true);

super.setAnimationFenetre(0);

super.setImageFond("", 1, 0, 1);

super.setCouleurTexteAutomatique(0xF4000000);

super.setCouleurBarreSysteme(0xFF000001);


activerEcoute();

////////////////////////////////////////////////////////////////////////////
// Initialisation des champs de WIN_WIN_Promotion
////////////////////////////////////////////////////////////////////////////
mWD_STC_Info.initialiserObjet();
super.ajouter("STC_Info", mWD_STC_Info);
mWD_ACTB_ActionBar.initialiserObjet();
super.ajouterActionBar(mWD_ACTB_ActionBar);

super.terminerInitialisation();
}

////////////////////////////////////////////////////////////////////////////
public boolean isUniteAffichageLogique()
{
return false;
}

public WDProjet getProjet()
{
return GWDPTS_Broadcast.getInstance();
}

public IWDEnsembleElement getEnsemble()
{
return GWDPTS_Broadcast.getInstance();
}
public int getModeContexteHF()
{
return 1;
}
/**
* Retourne le mode d'affichage de l'ActionBar de la fenêtre.
*/
public int getModeActionBar()
{
return 1;
}
/**
* Retourne vrai si la fenêtre est maximisée, faux sinon.
*/
public boolean isMaximisee()
{
return true;
}
/**
* Retourne vrai si la fenêtre a une barre de titre, faux sinon.
*/
public boolean isAvecBarreDeTitre()
{
return true;
}
/**
* Retourne le mode d'affichage de la barre système de la fenêtre.
*/
public int getModeBarreSysteme()
{
return 1;
}
/**
* Retourne vrai si la fenêtre est munie d'ascenseurs automatique, faux sinon.
*/
public boolean isAvecAscenseurAuto()
{
return true;
}
/**
* Retourne Vrai si on doit appliquer un theme "dark" (sombre) ou Faux si on doit appliquer "light" (clair) à la fenêtre.
* Ce choix se base sur la couleur du libellé par défaut dans le gabarit de la fenêtre.
*/
public boolean isThemeDark()
{
return false;
}
/**
* Retourne vrai si l'option de masquage automatique de l'ActionBar lorsqu'on scrolle dans un champ de la fenêtre a été activée.
*/
public boolean isMasquageAutomatiqueActionBar()
{
return false;
}
public static class WDActiviteFenetre extends WDActivite
{
protected WDFenetre getFenetre()
{
return GWDPTS_Broadcast.getInstance().mWD_WIN_WIN_Promotion;
}
}
/**
* Retourne le nom du gabarit associée à la fenêtre.
*/
public String getNomGabarit()
{
return "210 MATERIAL DESIGN BLUE GREY#WM";
}
}
